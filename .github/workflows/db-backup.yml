name: Backup Database

on:
  # push:
  #   branches: [main]
  # pull_request:
  #   branches: [main]
  workflow_dispatch:
  schedule:
    - cron: "0 17 * * *" # 2am kst
jobs:
  run_db_backup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    environment: production
    env:
      supabase_db_url: ${{ secrets.SUPABASE_DB_URL }} # For example: postgresql://postgres:[YOUR-PASSWORD]@db.<ref>.supabase.co:5432/postgres
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Backup roles
        run: |
          DATE=$(date +'%Y-%m-%d')
          supabase db dump --db-url "$supabase_db_url" -f "event-scraper/supabase/backups/roles_$DATE.sql" --role-only
      - name: Backup schema
        run: |
          DATE=$(date +'%Y-%m-%d')
          supabase db dump --db-url "$supabase_db_url" -f "event-scraper/supabase/backups/schema_$DATE.sql"
      - name: Backup data
        run: |
          DATE=$(date +'%Y-%m-%d')
          supabase db dump --db-url "$supabase_db_url" -f "event-scraper/supabase/backups/data_$DATE.sql" --data-only --use-copy
      - name: Cleanup old backups
        run: |
          find event-scraper/supabase/backups/ -name '*.sql' -type f -mtime +3 -exec rm {} +

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Supabase database backup
